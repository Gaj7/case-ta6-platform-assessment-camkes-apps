/*
 * Copyright 2020 Collins Aerospace
 *
 * This software may be distributed and modified according to the terms of
 * the BSD 3-Clause license. Note that NO WARRANTY is provided.
 * See "LICENSE_BSD3.txt" for details.
 */
#include <configurations/vm.h>

import <std_connector.camkes>;
import <global-connectors.camkes>;
import <seL4VMDTBPassthrough.idl4>;
import <FileServerInterface.camkes>;
import <FileServer/FileServer.camkes>;
import <SerialServer/SerialServer.camkes>;
import <TimeServer/TimeServer.camkes>;
import <vm-connectors.camkes>;
import <devices.camkes>;

import "components/AutopilotSerialServer/AutopilotSerialServer.camkes";
import "components/WaypointManager/WaypointManager.camkes";

component VM {
    VM_INIT_DEF()
    include <queue.h>;
    dataport queue_t crossvm_dp_wpm;
    emits SendEvent wpm_ready;
    maybe consumes SendEvent wpm_done;
    dataport queue_t crossvm_dp_apss;
    emits SendEvent apss_ready;
    maybe consumes SendEvent apss_done;
}


assembly {
    composition {

        VM_GENERAL_COMPOSITION_DEF()

        component VM vmUxAS;
        VM_COMPONENT_CONNECTIONS_DEF(UxAS)
        VM_VIRTUAL_SERIAL_COMPOSITION_DEF(UxAS)

        component AutopilotSerialServer autopilot_serial_server;
        component WaypointManager waypoint_manager;

        connection seL4Notification event_conn_wpm(from vmUxAS.wpm_ready, to waypoint_manager.p1_in_SendEvent);
        connection seL4SharedDataWithCaps cross_vm_conn_wpm(from vmUxAS.crossvm_dp_wpm,  to waypoint_manager.p1_in_queue);

        connection seL4GlobalAsynch event_conn_apss(from autopilot_serial_server.p1_out_SendEvent, to vmUxAS.apss_done);
        connection seL4SharedDataWithCaps cross_vm_conn_apss(from autopilot_serial_server.p1_out_queue, to vmUxAS.crossvm_dp_apss);

        connection seL4VMDTBPassthrough vm_dtb1(from vmUxAS.dtb_self, to vmUxAS.dtb);

    }
    configuration {

        /*
        cross_vm_conn_apss.size = 16384;
        cross_vm_conn_wpm.size = 16384;
        */

        autopilot_serial_server.p1_out_queue_access = "W";
        autopilot_serial_server._priority = 50;
        autopilot_serial_server._domain = 1;

        waypoint_manager.p1_in_queue_access = "R";
        waypoint_manager._priority = 50;
        waypoint_manager._domain = 2;
        waypoint_manager.p1_in_SendEvent_domain = 2;

        vmUxAS.crossvm_dp_apss = "R";
        vmUxAS.crossvm_dp_wpm = "W";

        VM_GENERAL_CONFIGURATION_DEF()
        VM_CONFIGURATION_DEF(UxAS)
        VM_VIRTUAL_SERIAL_CONFIGURATION_DEF(UxAS)

        vmUxAS.cnode_size_bits = 18;
        vmUxAS.simple_untyped21_pool = 12;
        vmUxAS.simple_untyped12_pool = 12;
        vmUxAS.num_extra_frame_caps = 0;
        vmUxAS.extra_frame_map_address = 0;

    }
}
